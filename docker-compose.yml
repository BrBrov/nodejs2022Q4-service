version: "3.9"
services:

  postgres:
    env_file: .env
    container_name: ${POSTGRES_HOST}
    image: database
    build:
      context: ./postgre-sql
      dockerfile: Dockerfile
      args:
        - POSTGRES_HOST:${POSTGRES_HOST}
        - POSTGRES_DB:${POSTGRES_DB}
        - POSTGRES_USER:${POSTGRES_USER}
        - POSTGRES_PASSWORD:${POSTGRES_PASSWORD}
        - POSTGRES_HOST:postgres
        - PG_CONTAINER_NAME:library
    volumes:
      - pgdata:/var/lib/postgresql/data
      - pglogs:/var/lib/postgresql/logs
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    networks:
      - hls
    restart: always

  server:
    container_name: server
    image: server
    env_file: .env
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - PORT:${PORT}
        - CRYPT_SALT:${CRYPT_SALT}
        - JWT_SECRET_KEY:${JWT_SECRET_KEY}
        - JWT_SECRET_REFRESH_KEY:${JWT_SECRET_REFRESH_KEY}
        - TOKEN_EXPIRE_TIME:${TOKEN_EXPIRE_TIME}
        - TOKEN_REFRESH_EXPIRE_TIME:${TOKEN_REFRESH_EXPIRE_TIME}
    volumes:
      - ./src:/server/src
    ports:
      - ${PORT}:${PORT}
    depends_on:
      - postgres
    networks:
      - hls
    restart: always
    command: npm run start:dev

networks:
  hls:
    driver: bridge

volumes:
    pgdata:
    pglogs: